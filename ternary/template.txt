package ternary

// Return{{upper}}
//  @Description: if实现的三元表达式，返回结果是{{lower}}
//  @param boolExpression: 表达式，最终返回一个布尔值
//  @param trueReturnValue: 当boolExpression返回值为true的时候返回的{{lower}}
//  @param falseReturnValue: 当boolExpression返回值为false的时候返回的{{lower}}
//  @return {{lower}}: 三元表达式的结果，为trueReturnValue或者falseReturnValue中的一个
func Return{{upper}}(boolExpression bool, trueReturnValue, falseReturnValue {{lower}}) {{lower}} {
	if boolExpression {
		return trueReturnValue
	} else {
		return falseReturnValue
	}
}

// Return{{upper}}Slice
//  @Description: if实现的三元表达式，返回结果是[]{{lower}}
//  @param boolExpression: 表达式，最终返回一个布尔值
//  @param trueReturnValue: 当boolExpression返回值为true的时候返回的[]{{lower}}
//  @param falseReturnValue: 当boolExpression返回值为false的时候返回的[]{{lower}}
//  @return []{{lower}}: 三元表达式的结果，为trueReturnValue或者falseReturnValue中的一个
func Return{{upper}}Slice(boolExpression bool, trueReturnValue, falseReturnValue []{{lower}}) []{{lower}} {
	if boolExpression {
		return trueReturnValue
	} else {
		return falseReturnValue
	}
}

// Return{{upper}}Pointer
//  @Description: if实现的三元表达式，返回结果是*{{lower}}
//  @param boolExpression: 表达式，最终返回一个布尔值
//  @param trueReturnValue: 当boolExpression返回值为true的时候返回的*{{lower}}
//  @param falseReturnValue: 当boolExpression返回值为false的时候返回的*{{lower}}
//  @return *{{lower}}: 三元表达式的结果，为trueReturnValue或者falseReturnValue中的一个
func Return{{upper}}Pointer(boolExpression bool, trueReturnValue, falseReturnValue *{{lower}}) *{{lower}} {
	if boolExpression {
		return trueReturnValue
	} else {
		return falseReturnValue
	}
}

// Return{{upper}}PointerSlice
//  @Description: if实现的三元表达式，返回结果是[]*{{lower}}
//  @param boolExpression: 表达式，最终返回一个布尔值
//  @param trueReturnValue: 当boolExpression返回值为true的时候返回的[]*{{lower}}
//  @param falseReturnValue: 当boolExpression返回值为false的时候返回的[]*{{lower}}
//  @return []*{{lower}}: 三元表达式的结果，为trueReturnValue或者falseReturnValue中的一个
func Return{{upper}}PointerSlice(boolExpression bool, trueReturnValue, falseReturnValue []*{{lower}}) []*{{lower}} {
	if boolExpression {
		return trueReturnValue
	} else {
		return falseReturnValue
	}
}
